{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "logicAppName": {
      "type": "string",
      "minLength": 1,
      "maxLength": 80,
      "metadata": {
        "description": "Name of the Logic App."
      }
    },
    "logicAppLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "allowedValues": [
        "[resourceGroup().location]",
        "eastasia",
        "southeastasia",
        "centralus",
        "eastus",
        "eastus2",
        "westus",
        "northcentralus",
        "southcentralus",
        "northeurope",
        "westeurope",
        "japanwest",
        "japaneast",
        "brazilsouth",
        "australiaeast",
        "australiasoutheast",
        "southindia",
        "centralindia",
        "westindia",
        "canadacentral",
        "canadaeast",
        "uksouth",
        "ukwest",
        "westcentralus",
        "westus2"
      ],
      "metadata": {
        "description": "Location of the Logic App."
      }
    },
    "ftp_1_Connection_Name": {
      "type": "string",
      "defaultValue": "ftp"
    },
    "ftp_1_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "OrdersCsvToFtp"
    },
    "ftp_1_serverAddress": {
      "type": "string",
      "metadata": {
        "description": "Server Address"
      },
      "defaultValue": "ftp://speedtest.tele2.net"
    },
    "ftp_1_userName": {
      "type": "string",
      "metadata": {
        "description": "User Name"
      },
      "defaultValue": "anonymous"
    },
    "ftp_1_password": {
      "type": "securestring",
      "metadata": {
        "description": "Password"
      }
    },
    "ftp_1_serverPort": {
      "type": "int",
      "metadata": {
        "description": "FTP Port Number (example: 21)"
      },
      "defaultValue": 21
    },
    "ftp_1_isSSL": {
      "type": "bool",
      "metadata": {
        "description": "Enable SSL? (True/False)"
      },
      "defaultValue": false
    },
    "ftp_1_isBinaryTransport": {
      "type": "bool",
      "metadata": {
        "description": "Enable Binary Transport? (True/False)"
      },
      "defaultValue": true
    },
    "ftp_1_disableCertificateValidation": {
      "type": "bool",
      "metadata": {
        "description": "Disable Certificate Validation? (True/False)"
      },
      "defaultValue": true
    },
    "ftp_1_closeConnectionAfterRequestCompletion": {
      "type": "bool",
      "metadata": {
        "description": "Close FTP connection everytime after request completes? (True/False)"
      },
      "defaultValue": true
    },
    "ftp_2_Connection_Name": {
      "type": "string",
      "defaultValue": "ftp"
    },
    "ftp_2_Connection_DisplayName": {
      "type": "string",
      "defaultValue": "OrdersCsvToFtp"
    },
    "ftp_2_serverAddress": {
      "type": "string",
      "metadata": {
        "description": "Server Address"
      },
      "defaultValue": "ftp://speedtest.tele2.net"
    },
    "ftp_2_userName": {
      "type": "string",
      "metadata": {
        "description": "User Name"
      },
      "defaultValue": "anonymous"
    },
    "ftp_2_password": {
      "type": "securestring",
      "metadata": {
        "description": "Password"
      }
    },
    "ftp_2_serverPort": {
      "type": "int",
      "metadata": {
        "description": "FTP Port Number (example: 21)"
      },
      "defaultValue": 21
    },
    "ftp_2_isSSL": {
      "type": "bool",
      "metadata": {
        "description": "Enable SSL? (True/False)"
      },
      "defaultValue": false
    },
    "ftp_2_isBinaryTransport": {
      "type": "bool",
      "metadata": {
        "description": "Enable Binary Transport? (True/False)"
      },
      "defaultValue": true
    },
    "ftp_2_disableCertificateValidation": {
      "type": "bool",
      "metadata": {
        "description": "Disable Certificate Validation? (True/False)"
      },
      "defaultValue": true
    },
    "ftp_2_closeConnectionAfterRequestCompletion": {
      "type": "bool",
      "metadata": {
        "description": "Close FTP connection everytime after request completes? (True/False)"
      },
      "defaultValue": true
    }
  },
  "variables": {},
  "resources": [
    {
      "name": "[parameters('logicAppName')]",
      "type": "Microsoft.Logic/workflows",
      "location": "[parameters('logicAppLocation')]",
      "tags": {
        "displayName": "LogicApp"
      },
      "apiVersion": "2016-06-01",
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "Initialize_ServerUrl": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "ServerUrl",
                    "type": "String",
                    "value": "https://vc-platform554f.azurewebsites.net"
                  }
                ]
              },
              "runAfter": {}
            },
            "Initialize_ApiKey": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "ApiKey",
                    "type": "String",
                    "value": "573e05dd3f0041e7ae74bd4c812e5322"
                  }
                ]
              },
              "runAfter": {
                "Initialize_ServerUrl": [
                  "Succeeded"
                ]
              }
            },
            "Initialize_ApiDefinitionUrl": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "ApiDefinitionUrl",
                    "type": "String",
                    "value": "@{concat(variables('ServerUrl'),'/docs/virtocommerce.orders/v1/')}"
                  }
                ]
              },
              "runAfter": {
                "Initialize_ApiKey": [
                  "Succeeded"
                ]
              }
            },
            "Initialize_Uri": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "Uri",
                    "type": "String",
                    "value": "@{concat(variables('ServerUrl'),'/api/order/customerOrders/search')}"
                  }
                ]
              },
              "runAfter": {
                "Initialize_ApiDefinitionUrl": [
                  "Succeeded"
                ]
              }
            },
            "Initialize_OrdersArray": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "OrdersArray",
                    "type": "Array"
                  }
                ]
              },
              "runAfter": {
                "Initialize_Uri": [
                  "Succeeded"
                ]
              }
            },
            "OrderModule_Search": {
              "type": "Http",
              "inputs": {
                "method": "post",
                "uri": "@variables('Uri')",
                "headers": {
                  "api_key": "@variables('ApiKey')"
                },
                "body": {
                  "status": "New"
                }
              },
              "runAfter": {
                "Initialize_OrderNumber": [
                  "Succeeded"
                ]
              },
              "metadata": {
                "apiDefinitionUrl": "@variables('ApiDefinitionUrl')",
                "swaggerSource": "custom"
              }
            },
            "For_each_Order": {
              "type": "Foreach",
              "foreach": "@body('OrderModule_Search')?['customerOrders']",
              "actions": {
                "For_each_Order_Item": {
                  "type": "Foreach",
                  "foreach": "@items('For_each_Order')['items']",
                  "actions": {
                    "Compose_Array_Item": {
                      "type": "Compose",
                      "inputs": {
                        "OrderNumber": "@{items('For_each_Order')?['number']}",
                        "Sku": "@{items('For_each_Order_Item')?['sku']}",
                        "Quantity": "@{items('For_each_Order_Item')?['quantity']}",
                        "Price": "@{items('For_each_Order_Item')?['price']}",
                        "TotalPrice": "@{items('For_each_Order')?['total']}"
                      },
                      "runAfter": {}
                    },
                    "Append_to_array_variable": {
                      "type": "AppendToArrayVariable",
                      "inputs": {
                        "name": "OrdersArray",
                        "value": "@outputs('Compose_Array_Item')"
                      },
                      "runAfter": {
                        "Compose_Array_Item": [
                          "Succeeded"
                        ]
                      }
                    }
                  },
                  "runAfter": {}
                }
              },
              "runAfter": {
                "OrderModule_Search": [
                  "Succeeded"
                ]
              }
            },
            "Create_CSV_table": {
              "type": "Table",
              "inputs": {
                "from": "@variables('OrdersArray')",
                "format": "CSV"
              },
              "runAfter": {
                "For_each_Order": [
                  "Succeeded"
                ]
              }
            },
            "Initialize_CsvFileName": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "CsvFileName",
                    "type": "String",
                    "value": "@{concat(utcNow('yyyyMMdd'),'.cvs')}"
                  }
                ]
              },
              "runAfter": {
                "Initialize_OrdersArray": [
                  "Succeeded"
                ]
              }
            },
            "Create_file": {
              "type": "ApiConnection",
              "inputs": {
                "host": {
                  "connection": {
                    "name": "@parameters('$connections')['ftp_3']['connectionId']"
                  }
                },
                "method": "post",
                "body": "@body('Create_CSV_table')",
                "path": "/datasets/default/files",
                "queries": {
                  "folderPath": "/upload",
                  "name": "@variables('CsvFileName')",
                  "queryParametersSingleEncoded": true
                }
              },
              "runAfter": {
                "Create_CSV_table": [
                  "Succeeded"
                ]
              },
              "runtimeConfiguration": {
                "contentTransfer": {
                  "transferMode": "Chunked"
                }
              }
            },
            "For_each": {
              "type": "Foreach",
              "foreach": "@variables('OrdersArray')",
              "actions": {
                "HTTP": {
                  "type": "Http",
                  "inputs": {
                    "method": "PUT",
                    "uri": "@variables('Uri')",
                    "headers": {
                      "api_key": "@variables('ApiKey')"
                    },
                    "body": "@outputs('Compose')"
                  },
                  "runAfter": {
                    "Compose": [
                      "Succeeded"
                    ]
                  }
                },
                "OrderModule_GetByNumber": {
                  "type": "Http",
                  "inputs": {
                    "method": "get",
                    "headers": {
                      "api_key": "@variables('ApiKey')"
                    },
                    "uri": "@{concat(variables('ServerUrl'),'api/order/customerOrders/number/',encodeURIComponent(variables('OrderNumber')))}"
                  },
                  "runAfter": {
                    "Set_variable": [
                      "Succeeded"
                    ]
                  },
                  "metadata": {
                    "apiDefinitionUrl": "@variables('ApiDefinitionUrl')",
                    "swaggerSource": "custom"
                  }
                },
                "Compose": {
                  "type": "Compose",
                  "inputs": "@setProperty(body('OrderModule_getByNumber'),'status','Processing')",
                  "runAfter": {
                    "OrderModule_GetByNumber": [
                      "Succeeded"
                    ]
                  }
                },
                "Set_variable": {
                  "type": "SetVariable",
                  "inputs": {
                    "name": "OrderNumber",
                    "value": "@{items('For_each')?['OrderNumber']}"
                  },
                  "runAfter": {}
                }
              },
              "runAfter": {
                "Create_file": [
                  "Succeeded"
                ]
              }
            },
            "Initialize_OrderNumber": {
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "OrderNumber",
                    "type": "String"
                  }
                ]
              },
              "runAfter": {
                "Initialize_CsvFileName": [
                  "Succeeded"
                ]
              }
            }
          },
          "parameters": {
            "$connections": {
              "defaultValue": {},
              "type": "Object"
            }
          },
          "triggers": {
            "Recurrence": {
              "type": "Recurrence",
              "recurrence": {
                "frequency": "Month",
                "interval": 1
              }
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {}
        },
        "parameters": {
          "$connections": {
            "value": {
              "ftp_3": {
                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'ftp')]",
                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('ftp_2_Connection_Name'))]",
                "connectionName": "[parameters('ftp_2_Connection_Name')]"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/connections', parameters('ftp_2_Connection_Name'))]"
      ]
    },
    {
      "type": "MICROSOFT.WEB/CONNECTIONS",
      "apiVersion": "2016-06-01",
      "name": "[parameters('ftp_2_Connection_Name')]",
      "location": "[parameters('logicAppLocation')]",
      "properties": {
        "api": {
          "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', parameters('logicAppLocation'), '/managedApis/', 'ftp')]"
        },
        "displayName": "[parameters('ftp_2_Connection_DisplayName')]",
        "parameterValues": {
          "serverAddress": "[parameters('ftp_2_serverAddress')]",
          "userName": "[parameters('ftp_2_userName')]",
          "password": "[parameters('ftp_2_password')]",
          "serverPort": "[parameters('ftp_2_serverPort')]",
          "isSSL": "[parameters('ftp_2_isSSL')]",
          "isBinaryTransport": "[parameters('ftp_2_isBinaryTransport')]",
          "disableCertificateValidation": "[parameters('ftp_2_disableCertificateValidation')]",
          "closeConnectionAfterRequestCompletion": "[parameters('ftp_2_closeConnectionAfterRequestCompletion')]"
        }
      }
    }
  ],
  "outputs": {}
}